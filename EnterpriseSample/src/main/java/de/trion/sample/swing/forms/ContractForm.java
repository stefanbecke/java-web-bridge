package de.trion.sample.swing.forms;

import de.trion.sample.controller.ContractController;
import de.trion.sample.controller.NavigationController;
import de.trion.sample.model.Contract;
import de.trion.sample.service.ContractService;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;

public class ContractForm extends javax.swing.JPanel
{
    // http://www.java2s.com/Code/Java/Swing-Components/ButtonTableExample.htm

    private final ContractController contractController;
    private final ContractService contractService;
    private HashMap<Integer, Contract> contractMap;

    public ContractForm(ContractService contractService, ContractController contractController, NavigationController navigationController)
    {
        this.contractService = contractService;
        this.contractController = contractController;
        contractController.registerChangeListener(this);
        
        initComponents();
        
        jTable1.getColumn("Send mail").setCellRenderer(new ButtonRenderer());
        jTable1.getColumn("Action").setCellRenderer(new ButtonRenderer());
        
        modelUpdate();
        
        jTable1.addMouseListener(new MouseAdapter()
        {
            @Override
            public void mouseClicked(MouseEvent e)
            {
                JTable target = (JTable) e.getSource();
                int row = target.getSelectedRow();
                int column = target.getSelectedColumn();

                if(column == 3)
                {
                    Contract contract = contractMap.get(row);
                    if(contract == null)
                    {
                        return;
                    }
                    if(contract.isEnabled())
                    {
                        contractController.disableContract(contract);
                        navigationController.statusUpdate("Disabled contract " + contract.getName());
                    }
                    else
                    {
                        contractController.enableContract(contract);
                        navigationController.statusUpdate("Enabled contract " + contract.getName());
                    }
                }
                if(column == 2)
                {
                    Contract contract = contractMap.get(row);
                    if(contract ==  null)
                    {
                        return;
                    }
                    if(!contract.isEnabled())
                    {
                        return;
                    }
                    navigationController.sendMail(contract);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Name", "Company", "Send mail", "Action"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void modelUpdate()
    {
        TableModel model = jTable1.getModel();
        
        List<Contract> contracts = contractService.getContracts();
        contractMap = new HashMap<>();
        for (int i = 0; i < contracts.size(); i++)
        {
            Contract contract = contracts.get(i);
            contractMap.put(i, contract);
            
            model.setValueAt(contract.getName(), i, 0);
            model.setValueAt(contract.getCompany(), i, 1);
            if(contract.isEnabled())
            {
                model.setValueAt("Send email", i, 2);
                model.setValueAt("disable", i, 3);
            }
            else
            {
                model.setValueAt("", i, 2);
                model.setValueAt("enable", i, 3);
            }
        }
    }

    class ButtonRenderer extends JButton implements TableCellRenderer
    {

        public ButtonRenderer()
        {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column)
        {
            if (isSelected)
            {
                setForeground(table.getSelectionForeground());
                setBackground(table.getSelectionBackground());
            }
            else
            {
                setForeground(table.getForeground());
                setBackground(UIManager.getColor("Button.background"));
            }
            setText((value == null) ? "" : value.toString());
            setEnabled(! (value == null || value.toString().isEmpty()) );
            return this;
        }
    }

}
